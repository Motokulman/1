# Generated by Django 2.1.4 on 2019-12-12 12:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(default='default_identifier', help_text='Уникальный неизменяемый идентификатор (только латинские символы)', max_length=200, unique=True)),
                ('name', models.CharField(help_text='Введите применение материала, например, стеновой, облицовочный, цоколь', max_length=200)),
            ],
            options={
                'verbose_name': 'Область применения материала',
                'verbose_name_plural': 'Области применения материалов',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите город', max_length=200, unique=True)),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ClassBLight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(default='default_identifier', help_text='Уникальный неизменяемый идентификатор (только латинские символы)', max_length=200, unique=True)),
                ('name', models.CharField(help_text='Введите класс В', max_length=200)),
            ],
            options={
                'verbose_name': 'Класс В легкого бетона',
                'verbose_name_plural': 'Классы В легких бетонов',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Customization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Индивидуальные настройки проекта',
                'verbose_name_plural': 'Индивидуальные настройки проектов',
            },
        ),
        migrations.CreateModel(
            name='DirectProducer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите производителя материала. Например, Кощаковский завод, Чайковский и т.д.', max_length=200, unique=True)),
            ],
            options={
                'verbose_name': 'Производитель материала',
                'verbose_name_plural': 'Производители материалов (конкретные заводы)',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='MarkD',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(default='default_identifier', help_text='Уникальный неизменяемый идентификатор (только латинские символы)', max_length=200, unique=True)),
                ('name', models.CharField(help_text='Введите марку D', max_length=200)),
            ],
            options={
                'verbose_name': 'Марка D',
                'verbose_name_plural': 'Марки D',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='MarkM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(default='default_identifier', help_text='Уникальный неизменяемый идентификатор (только латинские символы)', max_length=200, unique=True)),
                ('name', models.CharField(help_text='Введите марку М', max_length=200)),
            ],
            options={
                'verbose_name': 'Марка М',
                'verbose_name_plural': 'Марки М',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='PileGrillageFoundationWorkPrices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('const_expenditure', models.FloatField(verbose_name='Постоянные трудозатраты, чел.час')),
                ('transportation_procurement_cost', models.FloatField(verbose_name='Транспортно-заготовительные расходы, рублей')),
                ('reinforcement_binding', models.FloatField(verbose_name='Вязка 1м арматуры ростверка, чел.час')),
                ('clamp', models.FloatField(verbose_name='Изготовление 1 хомута, чел.час')),
                ('pile_frame', models.FloatField(verbose_name='Изготовление свайного каркаса, чел.час')),
                ('formwork', models.FloatField(verbose_name='Установка 1кв.м. опалубки (ламфанера), чел.час')),
                ('length_costs', models.FloatField(verbose_name='Затраты, зависящие от длины ростверка, за 1 пог.м., чел.час')),
                ('square_costs', models.FloatField(verbose_name='Затраты, зависящие от площали ростверка, за 1 кв.м., чел.час')),
                ('volume_costs', models.FloatField(verbose_name='Затраты, зависящие от объема бетона ростверка, за 1 куб.м., чел.час')),
                ('pile_pour', models.FloatField(verbose_name='Заливка 1 сваи, чел.час')),
                ('man_hours_cost', models.IntegerField(verbose_name='Оплата рабочим за 1 чел.час')),
                ('man_hours_profit', models.IntegerField(verbose_name='Прибыль с 1 чел.часа')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Стоимость свайно-ростверкового фундамента',
                'verbose_name_plural': 'Стоимость свайно-ростверковых фундаментов',
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('scheme_scale', models.FloatField(blank=True, null=True, verbose_name='Масштаб схемы')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('customization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.Customization', verbose_name='Кастомизация')),
            ],
            options={
                'verbose_name': 'Проект',
                'verbose_name_plural': 'Проекты',
            },
        ),
        migrations.CreateModel(
            name='ProductBrand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите бренд, например, Wienerberger', max_length=200, unique=True)),
            ],
            options={
                'verbose_name': 'Бренд',
                'verbose_name_plural': 'Бренды',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheme_scale', models.IntegerField(blank=True, default=25, null=True, verbose_name='Начальный масштаб схемы')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Профиль пользователя',
                'verbose_name_plural': 'Профили пользователей',
            },
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите бренд продавца', max_length=200, unique=True)),
                ('ownership_form', models.CharField(choices=[('p', 'Частное лицо'), ('c', 'Компания')], default='p', help_text='Выберите форму собственности', max_length=1)),
            ],
            options={
                'verbose_name': 'Поставщик услуг/материалов',
                'verbose_name_plural': 'Поставщики услуг/материалов',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ProviderActivityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(default='default_identifier', help_text='Уникальный неизменяемый идентификатор (только латинские символы)', max_length=200, unique=True)),
                ('name', models.CharField(help_text='Введите наименование вида деятельности', max_length=200)),
            ],
            options={
                'verbose_name': 'Доступный вид деятельности',
                'verbose_name_plural': 'Доступные виды деятельности',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ProviderOutlet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('local_name', models.CharField(blank=True, help_text='Введите уточняющее название офиса или торговой точки. Например, Офис на Московской ', max_length=200)),
                ('information', models.TextField(help_text='Контакты, адрес и т.д. продавца', max_length=200)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.City')),
                ('name', models.ForeignKey(help_text='Выберите поставщика, которому принадлежит этот офис,торговая точка', on_delete=django.db.models.deletion.CASCADE, to='catalog.Provider')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Торговая точка/офис',
                'verbose_name_plural': 'Торговые точки/офисы',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='RockWallMaterialPricePosition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField()),
            ],
            options={
                'verbose_name': 'Ценовая позиция',
                'verbose_name_plural': 'Ценовые позиции',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='RockWallMaterialStandardSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(default='default_identifier', help_text='Уникальный неизменяемый идентификатор (только латинские символы)', max_length=200, unique=True)),
                ('name', models.CharField(help_text='Введите общепринятую классификацию размера или название', max_length=200)),
                ('a_size', models.IntegerField(blank=True)),
                ('b_size', models.IntegerField(blank=True)),
                ('c_size', models.IntegerField(blank=True)),
                ('size_type', models.CharField(choices=[('bl', 'Блок'), ('br', 'Кирпич')], default='br', help_text='Тип материала по размеру: блок или кирпич', max_length=2)),
            ],
            options={
                'verbose_name': 'Размер каменного материала',
                'verbose_name_plural': 'Размеры каменных материалов',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='RockWallMaterialUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thermal_conductivity', models.IntegerField(blank=True, help_text='Введите коэффициент теплопроводности', null=True)),
                ('primary_or_additional', models.CharField(choices=[('p', 'Основной'), ('a', 'Доборный')], default='p', help_text='Тип элемента: основной или доборный', max_length=1)),
                ('body_type', models.CharField(choices=[('r', 'Полнотелый красный'), ('s', 'Полнотелый силикатный'), ('h', 'Пустотелый керамический'), ('a', 'Газобетонный'), ('k', 'Керамзитобетонный')], default='r', help_text='Тип кирпича или блока', max_length=1)),
                ('brick_type', models.CharField(blank=True, choices=[('f', 'Облицовочный'), ('o', 'Рядовой'), ('m', 'Рядовой c гранью под облицовку'), ('p', 'Перегородочный')], help_text='Тип кирпича - рядовой или облицовочный', max_length=1)),
                ('brand', models.ManyToManyField(blank=True, help_text='Выберите основной бренд (например, Wienerberger)', to='catalog.ProductBrand')),
                ('class_b', models.ManyToManyField(blank=True, help_text='Выберите стандартный класс В для данного материала, если есть', to='catalog.ClassBLight')),
                ('mark_d', models.ManyToManyField(blank=True, help_text='Выберите стандартную марку D для данного материала, если есть', to='catalog.MarkD')),
                ('mark_m', models.ManyToManyField(blank=True, help_text='Выберите стандартную марку М для данного материала, если есть', to='catalog.MarkM')),
                ('producer', models.ManyToManyField(blank=True, help_text='Выберите производителя', to='catalog.DirectProducer')),
                ('standard_size', models.ForeignKey(blank=True, help_text='Выберите стандартный размер', null=True, on_delete=django.db.models.deletion.CASCADE, to='catalog.RockWallMaterialStandardSize')),
            ],
            options={
                'verbose_name': 'Единица стенового материала',
                'verbose_name_plural': 'Единицы стеновых материалов',
            },
        ),
        migrations.CreateModel(
            name='TaxSystemType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(default='default_identifier', help_text='Уникальный неизменяемый идентификатор (только латинские символы)', max_length=200, unique=True)),
                ('name', models.CharField(help_text='Введите наименование системы налогообложения', max_length=200)),
            ],
            options={
                'verbose_name': 'Система налогообложения',
                'verbose_name_plural': 'Системы налогообложения',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='TradeMark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите торговую марку, например, Porotherm, Kerama и т.д.', max_length=200, unique=True)),
                ('brand', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='catalog.ProductBrand')),
            ],
            options={
                'verbose_name': 'Торговая марка',
                'verbose_name_plural': 'Торговые марки',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='TradeMarkSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите название серии товаров, если она есть', max_length=200, unique=True)),
                ('trademark', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.TradeMark')),
            ],
            options={
                'verbose_name': 'Товарная серия',
                'verbose_name_plural': 'Товарные серии (какой-либо марки)',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='WallMaterialType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(default='default_identifier', help_text='Уникальный неизменяемый идентификатор (только латинские символы)', max_length=200, unique=True)),
                ('name', models.CharField(help_text='Введите тип материала стены с точки зрения пользователя: кирпич полнотелый, газобетон и т.д.', max_length=200)),
                ('common_wall_type', models.CharField(choices=[('r', 'Каменый'), ('w', 'Деревянный')], default='r', help_text='Выберите: деревянный или каменный', max_length=1)),
            ],
            options={
                'verbose_name': 'Тип несущей части стены',
                'verbose_name_plural': 'Типы несущей части стены',
                'ordering': ('name',),
            },
        ),
        migrations.AddField(
            model_name='rockwallmaterialunit',
            name='trade_mark',
            field=models.ManyToManyField(blank=True, help_text='Выберите торговую марку изделия (например, Porotherm 44)', to='catalog.TradeMark'),
        ),
        migrations.AddField(
            model_name='rockwallmaterialpriceposition',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.RockWallMaterialUnit'),
        ),
        migrations.AddField(
            model_name='rockwallmaterialpriceposition',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='provider',
            name='primary_activity',
            field=models.ForeignKey(help_text='Выберите основной вид деятельности', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_activity', to='catalog.ProviderActivityType'),
        ),
        migrations.AddField(
            model_name='provider',
            name='secondary_activity',
            field=models.ManyToManyField(help_text='Выберите дополнительные виды деятельности', related_name='secondary_activity', to='catalog.ProviderActivityType'),
        ),
        migrations.AddField(
            model_name='provider',
            name='tax_system',
            field=models.ManyToManyField(help_text='Выберите применяемые Вами системы налообложения (можно несколько)', to='catalog.TaxSystemType'),
        ),
    ]
